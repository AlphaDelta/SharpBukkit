//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharpBukkitLive.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SharpBukkitLive.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///gui.done=Done
        ///gui.cancel=Cancel
        ///gui.toMenu=Back to title screen
        ///gui.up=Up
        ///gui.down=Down
        ///gui.yes=Yes
        ///gui.no=No
        ///
        ///menu.singleplayer=Singleplayer
        ///menu.multiplayer=Multiplayer
        ///menu.mods=Mods and Texture Packs
        ///menu.options=Options...
        ///menu.quit=Quit Game
        ///
        ///selectWorld.title=Select World
        ///selectWorld.empty=empty
        ///selectWorld.world=World
        ///selectWorld.select=Play Selected World
        ///selectWorld.create=Create New World
        ///selectWorld.createDemo=Play New Demo World
        ///selectWorld.delete=Delete
        ///selectWorld.renam [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string en_US {
            get {
                return ResourceManager.GetString("en_US", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1000,43ddd8b48469d9a8c011718aa846facb
        ///1001,aaed8c669f583cf35300f7c5d5396fce
        ///1002,d517ae73160fd8576d7687ead1c1a973
        ///1003,ac37df168bae3c69a24d7fd5bae913c7
        ///1004,6d2591e94464b8327afadbdba44978d
        ///1100,8b1df73e012e2ae34cd2d84a72a7898b
        ///2000,c9ee0d494e0524c86a577cf684f5816d
        ///2001,cd7a2836ea0b77b23a6131222f5be354
        ///2002,381aeedb2c5c5a7a9a01333e0eebc839
        ///2003,229048d1bb9e928831734cb2e5000286
        ///2004,b2c088c3c6928bfe29684a75ae1b127c
        ///2005,1ce3491a1021a5aed07c687e3f6133e6
        ///2006,6c3d114caffd8160f7d56fc8757419a
        ///2007,bc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string map {
            get {
                return ResourceManager.GetString("map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to gui.achievements=Achievements
        ///gui.stats=Statistics
        ///
        ///stat.generalButton=General
        ///stat.blocksButton=Blocks
        ///stat.itemsButton=Items
        ///
        ///stat.used=Times Used
        ///stat.mined=Times Mined
        ///stat.depleted=Times Depleted
        ///stat.crafted=Times Crafted
        ///
        ///stat.startGame=Times played
        ///stat.createWorld=Worlds played
        ///stat.loadWorld=Saves loaded
        ///stat.joinMultiplayer=Multiplayer joins
        ///stat.leaveGame=Games quit
        ///
        ///stat.playOneMinute=Minutes Played
        ///
        ///stat.walkOneCm=Distance Walked
        ///stat.fallOneCm=Distance Fallen
        ///stat.swimOn [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string stats_US {
            get {
                return ResourceManager.GetString("stats_US", resourceCulture);
            }
        }
    }
}
